services:
  postgres:
    container_name: aquarium-pg
    image: postgres:14.10-alpine
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
    ports:
      - 5432:5432
    volumes:
      - ./postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      # Use pg_isready to check postgres is running. Substitute different
      # user `postgres` if you've setup differently to config/pgpass-mainnet
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  aquarium-offchain:
    container_name: aquarium
    image: "${AQUARIUM_DOCKER_IMAGE_NAME}:${AQUARIUM_DOCKER_IMAGE_VERSION}"
    restart: on-failure
    environment:
      - DB_DRIVER=${DB_DRIVER}
      - DB_DIALECT=${DB_DIALECT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_SCHEMA=${DB_SCHEMA}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?currentSchema=${DB_SCHEMA}
      - STORE_CARDANO_HOST=${STORE_CARDANO_HOST}
      - STORE_CARDANO_PORT=${STORE_CARDANO_PORT}
      - BLOCKFROST_KEY=${BLOCKFROST_KEY}
      - WALLET_MNEMONIC=${WALLET_MNEMONIC}
      - AQUARIUM_STAKING_AUTO=${AQUARIUM_STAKING_AUTO}
