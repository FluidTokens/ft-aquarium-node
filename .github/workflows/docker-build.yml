name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # or any branch you want to trigger the action for
      - preview

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'  # Update to Java 21
          distribution: 'temurin'  # Correct distribution

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Build the JAR file with Gradle
      - name: Build JAR file
        run: |
          ./gradlew bootJar  # Assuming you're using bootJar to build the JAR

      # Step 5: Generate version using year.month.day format
      - name: Generate version
        id: version  # This step has an ID to be referenced in the next step
        run: |
          
          ## Append -pv for preview images
          
          echo "Foo: $GITHUB_REF_NAME"
          
          if [ ${{ env.GITHUB_REF_NAME }} == "preview" ]
          then
            VERSION=$(date +'%Y.%m.%d')-pv
          else
            VERSION=$(date +'%Y.%m.%d')  # Format: year.month.day
          fi

          echo "Generated version: ${VERSION}"
          if [ -z "$VERSION" ]; then
            echo "Error: VERSION is empty"
            exit 1
          fi
          echo "::set-output name=version::${VERSION}"  # Set VERSION as output for the next step

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub Username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub Personal Access Token

      # Step 7: Build and Push Docker image
      - name: Build and Push Docker image
        run: |
          VERSION=${{ steps.version.outputs.version }}  # Reference the output from Step 5
          DOCKER_IMAGE_NAME=fluidtokens/ft-aquarium-node
          echo "This is the image name: ${DOCKER_IMAGE_NAME}"
          DOCKER_IMAGE="${DOCKER_IMAGE_NAME}:${VERSION}"
          DOCKER_IMAGE_LATEST="${DOCKER_IMAGE_NAME}:latest"
          echo "Building Docker image with tag: ${DOCKER_IMAGE}"

          ## Don't push latest for preview
          if [ ${{ env.GITHUB_REF_NAME }} == "preview" ]
          then
            docker build -t "${DOCKER_IMAGE}" --push .
          else
            docker build -t "${DOCKER_IMAGE}" -t "${DOCKER_IMAGE_LATEST}" --push .
          fi

        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  # Access secret from GitHub Secrets
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  # Access secret from GitHub Secrets
